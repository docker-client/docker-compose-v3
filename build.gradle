import java.text.SimpleDateFormat

buildscript {
    ext {
        kotlin_version = '1.3.10'
    }

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.20.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
}

apply plugin: 'kotlin'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group = 'de.gesellix'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

ext {
    artifactVersion = new SimpleDateFormat('yyyy-MM-dd\'T\'HH-mm-ss').format(new Date())
    bintrayDryRun = false
}

repositories {
    mavenLocal()
    jcenter()
    maven { url "http://dl.bintray.com/jetbrains/spek" }
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    compile 'io.github.microutils:kotlin-logging:1.6.22'
    compile 'org.slf4j:slf4j-api:1.7.25'
    testRuntime 'ch.qos.logback:logback-classic:1.2.3'

    compile 'org.yaml:snakeyaml:1.23'
    compile 'com.squareup.moshi:moshi:1.8.0'
    compile 'com.squareup.moshi:moshi-kotlin:1.8.0'
    testCompile 'com.beust:klaxon:4.0.1'

    compile 'com.google.re2j:re2j:1.2'
//    compile 'com.github.fge:json-schema-validator:2.2.6'

    testCompile "org.jetbrains.kotlin:kotlin-test"
    testCompile("org.jetbrains.spek:spek-api:1.2.1") {
        exclude group: 'org.jetbrains.kotlin'
    }
    testRuntime("org.jetbrains.spek:spek-junit-platform-engine:1.2.1") {
        exclude group: 'org.junit.platform'
        exclude group: 'org.jetbrains.kotlin'
    }
    testRuntime "org.junit.platform:junit-platform-launcher:1.3.2"
}

def dependencyVersions = [
        "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version",
        "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version",
]

configurations.all {
    resolutionStrategy {
        failOnVersionConflict()
        force dependencyVersions
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

test {
    useJUnitPlatform {
        includeEngines 'spek'
    }
}

task sourcesJar(type: Jar) {
    dependsOn classes
    classifier 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        dockerCompose(MavenPublication) {
            artifactId 'docker-compose'
            version artifactVersion
            from components.java
            artifact sourcesJar
        }
    }
}

bintray {
    user = System.env.BINTRAY_USER ?: project["bintray.user"]
    key = System.env.BINTRAY_API_KEY ?: project["bintray.key"]
    publications = ['dockerCompose']
    pkg {
        repo = 'docker-utils'
        name = 'docker-compose'
        desc = 'A Docker compose v3 abstraction for the JVM'
        licenses = ['Apache-2.0']
        labels = ['docker', 'compose', 'stack', 'deploy', 'java']
        version = [
                name: artifactVersion
        ]
        vcsUrl = 'https://github.com/docker-client/docker-compose-v3.git'
    }
    dryRun = bintrayDryRun
}
bintrayUpload.dependsOn build

task updateWrapper(type: Wrapper) {
    gradleVersion = '5.0'
    distributionType = Wrapper.DistributionType.ALL
}
